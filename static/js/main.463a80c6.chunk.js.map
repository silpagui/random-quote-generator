{"version":3,"sources":["assets/arrow-circle.svg","components/RandomButton/RandomButton.component.js","components/Author/Author.component.js","components/Quote/Quote.component.js","components/Loading/Loading.component.js","components/App/App.js","index.js"],"names":["RandomButton","onClick","className","src","ArrowCircleSrc","alt","width","height","Author","quoteAuthor","quoteGenre","Quote","quoteText","Loading","App","useState","quote","setQuote","listQuotes","setLisQuotes","isLoading","setIsLoading","handleNewQuote","fetch","then","response","json","data","useEffect","genreList","filteredQuotes","filter","quoteItem","_id","parsedQuotes","length","slice","hasMoreQuote","map","href","ReactDOM","render","document","getElementById"],"mappings":"iRAAe,G,WAAA,IAA0B,0C,OCKlC,SAASA,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QAC7B,OACE,yBAAQC,UAAU,gBAAgBD,QAASA,EAA3C,mBAEE,qBAAKE,IAAKC,EAAgBC,IAAI,SAASC,MAAM,KAAKC,OAAO,U,MCNxD,SAASC,EAAT,GAAuD,IAArCC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,WAAYT,EAAW,EAAXA,QAChD,OACE,yBACEC,UAAU,SACVD,QAASA,EACT,+BAAuBQ,EAAvB,oBAA8CC,GAHhD,UAKE,sBAAM,cAAY,OAAOR,UAAU,cAAnC,SACGO,IAEH,sBAAM,cAAY,OAAOP,UAAU,SAAnC,SACGQ,O,MCXF,SAASC,EAAT,GAA+B,IAAdC,EAAa,EAAbA,UACtB,OAAO,mBAAGV,UAAU,QAAb,SAAsBU,I,MCDxB,SAASC,IACd,OACE,sBAAMX,UAAU,SAAhB,SACE,sBAAMA,UAAU,cAAhB,0BCGC,SAASY,IACd,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAmCF,mBAAS,IAA5C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEA,SAASC,IACPD,GAAa,GACbE,MARgB,2DASbC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLV,EAASU,EAAKA,KAAK,IACnBR,EAAa,IACbE,GAAa,MAInBO,oBAAUN,EAAgB,CAACL,EAAUE,EAAcE,IAEnD,IAAMQ,EAAS,kEAA8Db,EAAMP,YAApE,iCAAwGO,EAAMN,YAcvHoB,EAAiBZ,EAAWa,QAAO,SAACC,GACxC,OAAOA,EAAUC,MAAQjB,EAAMiB,OAG3BC,EACsB,IAA1BJ,EAAeK,OAAeL,EAAeM,MAAM,EAAG,GAAKN,EAEvDO,EAAenB,EAAWiB,OAAS,EAEzC,OACE,sBAAKjC,UAAU,eAAf,UACGkB,GAAa,cAACP,EAAD,IACd,cAACb,EAAD,CACEC,QAAS,WACPqB,OAGJ,sBAAKpB,UAAU,iBAAf,UACGmC,GAAgB,oBAAInC,UAAU,eAAd,SAA8Bc,EAAMP,cACrD,cAACE,EAAD,CAAOC,UAAWI,EAAMJ,YACvBsB,EAAaI,KAAI,SAACN,GACjB,OAAO,cAACrB,EAAD,CAA2BC,UAAWoB,EAAUpB,WAApCoB,EAAUC,SAE7BI,GACA,cAAC7B,EAAD,CACEC,YAAaO,EAAMP,YACnBC,WAAYM,EAAMN,WAClBT,QAAS,WAtCjBoB,GAAa,GACbE,MAAMM,GACHL,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLR,EAAaQ,EAAKA,MAClBN,GAAa,YAqCf,oBAAGnB,UAAU,OAAb,wBACa,mBAAGqC,KAAK,8BAAR,sBADb,4BCxENC,IAASC,OAAO,cAAC3B,EAAD,IAAS4B,SAASC,eAAe,W","file":"static/js/main.463a80c6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/arrow-circle.67055034.svg\";","import React from \"react\";\nimport \"./RandomButton.styles.css\";\n\nimport ArrowCircleSrc from \"../../assets/arrow-circle.svg\";\n\nexport function RandomButton({ onClick }) {\n  return (\n    <button className=\"random-button\" onClick={onClick}>\n      random\n      <img src={ArrowCircleSrc} alt=\"random\" width=\"30\" height=\"30\" />\n    </button>\n  );\n}\n","import React from \"react\";\nimport \"./Author.styles.css\";\n\nexport function Author({ quoteAuthor, quoteGenre, onClick }) {\n  return (\n    <button\n      className=\"author\"\n      onClick={onClick}\n      aria-label={`Author: ${quoteAuthor}. Genre: ${quoteGenre}`}\n    >\n      <span aria-hidden=\"true\" className=\"author-name\">\n        {quoteAuthor}\n      </span>\n      <span aria-hidden=\"true\" className=\"genres\">\n        {quoteGenre}\n      </span>\n    </button>\n  );\n}\n","import React from \"react\";\nimport \"./Quote.styles.css\";\n\nexport function Quote({ quoteText }) {\n  return <p className=\"quote\">{quoteText}</p>;\n}\n","import React from \"react\";\nimport \"./Loading.styles.css\";\n\nexport function Loading() {\n  return (\n    <span className=\"loader\">\n      <span className=\"loader-deco\">Loading...</span>\n    </span>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.styles.css\";\n\nimport { RandomButton } from \"../RandomButton/RandomButton.component.js\";\nimport { Author } from \"../Author/Author.component.js\";\nimport { Quote } from \"../Quote/Quote.component.js\";\nimport { Loading } from \"../Loading/Loading.component\";\n\nconst randomQuote = \"https://quote-garden.herokuapp.com/api/v3/quotes/random\";\nexport function App() {\n  const [quote, setQuote] = useState({});\n  const [listQuotes, setLisQuotes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  function handleNewQuote() {\n    setIsLoading(true);\n    fetch(randomQuote)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setQuote(data.data[0]);\n        setLisQuotes([]);\n        setIsLoading(false);\n      });\n  }\n\n  useEffect(handleNewQuote, [setQuote, setLisQuotes, setIsLoading]);\n\n  const genreList = `https://quote-garden.herokuapp.com/api/v3/quotes?author=${quote.quoteAuthor}&page=1&limit=3&genre=${quote.quoteGenre}`;\n\n  const handleGenre = () => {\n    setIsLoading(true);\n    fetch(genreList)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setLisQuotes(data.data);\n        setIsLoading(false);\n      });\n  };\n\n  const filteredQuotes = listQuotes.filter((quoteItem) => {\n    return quoteItem._id !== quote._id;\n  });\n\n  const parsedQuotes =\n    filteredQuotes.length === 3 ? filteredQuotes.slice(0, 2) : filteredQuotes;\n\n  const hasMoreQuote = listQuotes.length > 0;\n\n  return (\n    <div className=\"main-wrapper\">\n      {isLoading && <Loading />}\n      <RandomButton\n        onClick={() => {\n          handleNewQuote();\n        }}\n      />\n      <div className=\"quotes-wrapper\">\n        {hasMoreQuote && <h1 className=\"author-title\">{quote.quoteAuthor}</h1>}\n        <Quote quoteText={quote.quoteText} />\n        {parsedQuotes.map((quoteItem) => {\n          return <Quote key={quoteItem._id} quoteText={quoteItem.quoteText} />;\n        })}\n        {!hasMoreQuote && (\n          <Author\n            quoteAuthor={quote.quoteAuthor}\n            quoteGenre={quote.quoteGenre}\n            onClick={() => {\n              handleGenre();\n            }}\n          />\n        )}\n      </div>\n      <p className=\"copy\">\n        created by <a href=\"https://github.com/silpagui\">silpagui</a> -\n        devChallenges.io\n      </p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App/App.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}